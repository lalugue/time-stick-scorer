local spawned_balls = 0
local spawn_timer = 3
local max_balls = 3
go.property("spawn_interval", 3)

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	spawn_timer = spawn_timer + dt
	print("dt: ",dt)
	if spawn_timer >= self.spawn_interval and spawned_balls < max_balls then
		spawn_timer = 0
		-- Spawn a ball and store it in the "balls" table.
		local id = factory.create("#ball_factory", go.get_world_position(), nil, {is_bonus = true})
		spawned_balls = spawned_balls + 1
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("decrease_spawned_balls") then
		spawned_balls = spawned_balls - 1
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
